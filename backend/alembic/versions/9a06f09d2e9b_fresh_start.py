"""Fresh start

Revision ID: 9a06f09d2e9b
Revises: 
Create Date: 2025-07-14 00:15:40.591281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a06f09d2e9b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('profile_image_url', sa.Text(), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=False),
    sa.Column('product', sa.String(), nullable=True),
    sa.Column('spotify_profile_url', sa.Text(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=False),
    sa.Column('token_expires_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('raw_data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_spotify_id'), 'users', ['spotify_id'], unique=True)
    op.create_table('user_playlists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(), nullable=False),
    sa.Column('playlist_id', sa.String(), nullable=False),
    sa.Column('playlist_name', sa.String(), nullable=False),
    sa.Column('playlist_image', sa.Text(), nullable=True),
    sa.Column('playlist_url', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['spotify_id'], ['users.spotify_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_playlists_id'), 'user_playlists', ['id'], unique=False)
    op.create_index(op.f('ix_user_playlists_spotify_id'), 'user_playlists', ['spotify_id'], unique=False)
    op.create_table('user_top_artists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(), nullable=False),
    sa.Column('artist_id', sa.String(), nullable=False),
    sa.Column('artist_name', sa.String(), nullable=False),
    sa.Column('artist_url', sa.Text(), nullable=True),
    sa.Column('genres', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('popularity', sa.Integer(), nullable=True),
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('retrieved_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['spotify_id'], ['users.spotify_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_top_artists_id'), 'user_top_artists', ['id'], unique=False)
    op.create_index(op.f('ix_user_top_artists_spotify_id'), 'user_top_artists', ['spotify_id'], unique=False)
    op.create_table('user_top_tracks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(), nullable=False),
    sa.Column('track_id', sa.String(), nullable=False),
    sa.Column('track_name', sa.String(), nullable=False),
    sa.Column('track_url', sa.Text(), nullable=True),
    sa.Column('artist_names', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('artist_urls', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('album_name', sa.String(), nullable=True),
    sa.Column('images', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('popularity', sa.Integer(), nullable=True),
    sa.Column('time_range', sa.String(), nullable=False),
    sa.Column('retrieved_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['spotify_id'], ['users.spotify_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_top_tracks_id'), 'user_top_tracks', ['id'], unique=False)
    op.create_index(op.f('ix_user_top_tracks_spotify_id'), 'user_top_tracks', ['spotify_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_top_tracks_spotify_id'), table_name='user_top_tracks')
    op.drop_index(op.f('ix_user_top_tracks_id'), table_name='user_top_tracks')
    op.drop_table('user_top_tracks')
    op.drop_index(op.f('ix_user_top_artists_spotify_id'), table_name='user_top_artists')
    op.drop_index(op.f('ix_user_top_artists_id'), table_name='user_top_artists')
    op.drop_table('user_top_artists')
    op.drop_index(op.f('ix_user_playlists_spotify_id'), table_name='user_playlists')
    op.drop_index(op.f('ix_user_playlists_id'), table_name='user_playlists')
    op.drop_table('user_playlists')
    op.drop_index(op.f('ix_users_spotify_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
